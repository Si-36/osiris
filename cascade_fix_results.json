{
  "fixes_applied": [
    "Fixed indentation in core/src/aura_intelligence/production_wiring.py",
    "Fixed indentation in core/src/aura_intelligence/cloud_integration.py",
    "Fixed indentation in core/src/aura_intelligence/config.py",
    "Fixed indentation in core/src/aura_intelligence/vector_search.py",
    "Fixed indentation in core/src/aura_intelligence/production_integration_2025.py",
    "Fixed indentation in core/src/aura_intelligence/production_system_2025.py",
    "Fixed indentation in core/src/aura_intelligence/bio_enhanced_production_system.py",
    "Fixed indentation in core/src/aura_intelligence/feature_flags.py",
    "Fixed indentation in core/src/aura_intelligence/unified_brain.py",
    "Fixed indentation in core/src/aura_intelligence/bio_enhanced_system.py",
    "Fixed indentation in core/src/aura_intelligence/ultra_deep_2025.py",
    "Fixed indentation in core/src/aura_intelligence/enhanced_system_2025.py",
    "Fixed indentation in core/src/aura_intelligence/enhanced_integration.py",
    "Fixed indentation in core/src/aura_intelligence/moe/switch_transformer.py",
    "Fixed indentation in core/src/aura_intelligence/moe/mixture_of_experts.py",
    "Fixed indentation in core/src/aura_intelligence/moe/google_switch_transformer.py",
    "Fixed indentation in core/src/aura_intelligence/moe/real_switch_moe.py",
    "Fixed indentation in core/src/aura_intelligence/tda/real_algorithms_fixed.py",
    "Fixed indentation in core/src/aura_intelligence/tda/lazy_witness.py",
    "Fixed indentation in core/src/aura_intelligence/tda/production_fallbacks.py",
    "Fixed indentation in core/src/aura_intelligence/tda/matrix_ph_gpu.py",
    "Fixed indentation in core/src/aura_intelligence/tda/real_tda.py",
    "Fixed indentation in core/src/aura_intelligence/tda/core.py",
    "Fixed indentation in core/src/aura_intelligence/tda/algorithms.py",
    "Fixed indentation in core/src/aura_intelligence/tda/multi_parameter_persistence.py",
    "Fixed indentation in core/src/aura_intelligence/tda/phformer_integration.py",
    "Fixed indentation in core/src/aura_intelligence/tda/enhanced_pipeline.py",
    "Fixed indentation in core/src/aura_intelligence/tda/streaming_processor.py",
    "Fixed indentation in core/src/aura_intelligence/tda/benchmarks.py",
    "Fixed indentation in core/src/aura_intelligence/tda/unified_engine.py",
    "Fixed indentation in core/src/aura_intelligence/tda/service.py",
    "Fixed indentation in core/src/aura_intelligence/tda/topo_fuzzer_pro.py",
    "Fixed indentation in core/src/aura_intelligence/tda/unified_engine_2025.py",
    "Fixed indentation in core/src/aura_intelligence/tda/gpu_acceleration.py",
    "Fixed indentation in core/src/aura_intelligence/tda/cuda_kernels.py",
    "Fixed indentation in core/src/aura_intelligence/memory_tiers/real_hybrid_memory.py",
    "Fixed indentation in core/src/aura_intelligence/memory_tiers/cxl_memory.py",
    "Fixed indentation in core/src/aura_intelligence/coral/best_coral.py",
    "Fixed indentation in core/src/aura_intelligence/coral/advanced_coral.py",
    "Fixed indentation in core/src/aura_intelligence/coral/production_coral.py",
    "Fixed indentation in core/src/aura_intelligence/coral/communication.py",
    "Fixed indentation in core/src/aura_intelligence/examples/real_demo_system.py",
    "Fixed indentation in core/src/aura_intelligence/examples/gpu_allocation_scenario.py",
    "Fixed indentation in core/src/aura_intelligence/lnn/real_mit_lnn.py",
    "Fixed indentation in core/src/aura_intelligence/lnn/core.py",
    "Fixed indentation in core/src/aura_intelligence/lnn/edge_deployment.py",
    "Fixed indentation in core/src/aura_intelligence/lnn/dynamics.py",
    "Fixed indentation in core/src/aura_intelligence/benchmarks/workflow_benchmarks.py",
    "Fixed indentation in core/src/aura_intelligence/memory/test_metrics_updater.py",
    "Fixed indentation in core/src/aura_intelligence/memory/storage_interface.py",
    "Fixed indentation in core/src/aura_intelligence/memory/shadow_deployment.py",
    "Fixed indentation in core/src/aura_intelligence/memory/config.py",
    "Fixed indentation in core/src/aura_intelligence/memory/async_shape_memory.py",
    "Fixed indentation in core/src/aura_intelligence/memory/neo4j_motifcost.py",
    "Fixed indentation in core/src/aura_intelligence/memory/mem0_integration.py",
    "Fixed indentation in core/src/aura_intelligence/memory/hybrid_manager.py",
    "Fixed indentation in core/src/aura_intelligence/memory/test_decorator_ordering.py",
    "Fixed indentation in core/src/aura_intelligence/memory/__init__.py",
    "Fixed indentation in core/src/aura_intelligence/memory/redis_store.py",
    "Fixed indentation in core/src/aura_intelligence/memory/test_critical_fixes.py",
    "Fixed indentation in core/src/aura_intelligence/memory/observability.py",
    "Fixed indentation in core/src/aura_intelligence/memory/shape_aware_memory.py",
    "Fixed indentation in core/src/aura_intelligence/memory/neo4j_etl.py",
    "Fixed indentation in core/src/aura_intelligence/memory/smoke_test.py",
    "Fixed indentation in core/src/aura_intelligence/memory/causal_pattern_store.py",
    "Fixed indentation in core/src/aura_intelligence/memory/fusion_scorer.py",
    "Fixed indentation in core/src/aura_intelligence/memory/fastrp_embeddings.py",
    "Fixed indentation in core/src/aura_intelligence/memory/hyperoak_adapter.py",
    "Fixed indentation in core/src/aura_intelligence/memory/test_knn_index.py",
    "Fixed indentation in core/src/aura_intelligence/memory/shape_memory_v2.py",
    "Fixed indentation in core/src/aura_intelligence/memory/cxl_memory_pool.py",
    "Fixed indentation in core/src/aura_intelligence/memory/shape_memory_v2_clean.py",
    "Fixed indentation in core/src/aura_intelligence/memory/shape_memory_v2_prod.py",
    "Fixed indentation in core/src/aura_intelligence/memory/topo_features.py",
    "Fixed indentation in core/src/aura_intelligence/memory/knn_index_real.py",
    "Fixed indentation in core/src/aura_intelligence/resilience/metrics.py",
    "Fixed indentation in core/src/aura_intelligence/resilience/bulkhead.py",
    "Fixed indentation in core/src/aura_intelligence/resilience/timeout.py",
    "Fixed indentation in core/src/aura_intelligence/resilience/__init__.py",
    "Fixed indentation in core/src/aura_intelligence/resilience/circuit_breaker.py",
    "Fixed indentation in core/src/aura_intelligence/resilience/retry.py",
    "Fixed indentation in core/src/aura_intelligence/streaming/pro_streaming_system.py",
    "Fixed indentation in core/src/aura_intelligence/streaming/kafka_integration.py",
    "Fixed indentation in core/src/aura_intelligence/multimodal/advanced_processing.py",
    "Fixed indentation in core/src/aura_intelligence/observability/config.py",
    "Fixed indentation in core/src/aura_intelligence/observability/telemetry.py",
    "Fixed indentation in core/src/aura_intelligence/observability/anomaly_detection.py",
    "Fixed indentation in core/src/aura_intelligence/observability/langsmith_integration.py",
    "Fixed indentation in core/src/aura_intelligence/observability/core.py",
    "Fixed indentation in core/src/aura_intelligence/observability/__init__.py",
    "Fixed indentation in core/src/aura_intelligence/observability/health_monitor.py",
    "Fixed indentation in core/src/aura_intelligence/observability/opentelemetry_integration.py",
    "Fixed indentation in core/src/aura_intelligence/observability/knowledge_graph.py",
    "Fixed indentation in core/src/aura_intelligence/observability/shadow_mode_logger.py",
    "Fixed indentation in core/src/aura_intelligence/observability/prometheus_metrics.py",
    "Fixed indentation in core/src/aura_intelligence/observability/structured_logging.py",
    "Fixed indentation in core/src/aura_intelligence/observability/pro_observability_system.py",
    "Fixed indentation in core/src/aura_intelligence/observability/dashboard.py",
    "Fixed indentation in core/src/aura_intelligence/observability/prometheus_integration.py",
    "Fixed indentation in core/src/aura_intelligence/observability/tracing.py",
    "Fixed indentation in core/src/aura_intelligence/research_2025/graph_of_thoughts.py",
    "Fixed indentation in core/src/aura_intelligence/research_2025/mixture_of_agents.py",
    "Fixed indentation in core/src/aura_intelligence/research_2025/constitutional_ai_v2.py",
    "Fixed indentation in core/src/aura_intelligence/routing/real_load_balancer.py",
    "Fixed indentation in core/src/aura_intelligence/routing/mixture_of_experts.py",
    "Fixed indentation in core/src/aura_intelligence/innovations/spiking_gnn_2025.py",
    "Fixed indentation in core/src/aura_intelligence/innovations/hybrid_memory_2025.py",
    "Fixed indentation in core/src/aura_intelligence/utils/decorators.py",
    "Fixed indentation in core/src/aura_intelligence/utils/logging.py",
    "Fixed indentation in core/src/aura_intelligence/adapters/neo4j_adapter.py",
    "Fixed indentation in core/src/aura_intelligence/adapters/tda_agent_context.py",
    "Fixed indentation in core/src/aura_intelligence/adapters/redis_high_performance.py",
    "Fixed indentation in core/src/aura_intelligence/adapters/tda_mem0_adapter.py",
    "Fixed indentation in core/src/aura_intelligence/adapters/redis_adapter.py",
    "Fixed indentation in core/src/aura_intelligence/adapters/mem0_adapter.py",
    "Fixed indentation in core/src/aura_intelligence/adapters/tda_neo4j_adapter.py",
    "Fixed indentation in core/src/aura_intelligence/workflows/real_temporal_workflows.py",
    "Fixed indentation in core/src/aura_intelligence/workflows/data_processing.py",
    "Fixed indentation in core/src/aura_intelligence/integrations/enhanced_workflow_integration.py",
    "Fixed indentation in core/src/aura_intelligence/integrations/mojo_tda_bridge.py",
    "Fixed indentation in core/src/aura_intelligence/integrations/enhanced_workflow_orchestrator.py",
    "Fixed indentation in core/src/aura_intelligence/integrations/__init__.py",
    "Fixed indentation in core/src/aura_intelligence/integrations/real_api_connectors.py",
    "Fixed indentation in core/src/aura_intelligence/integrations/workflow_orchestrator.py",
    "Fixed indentation in core/src/aura_intelligence/real_components/real_multimodal.py",
    "Fixed indentation in core/src/aura_intelligence/real_components/real_spiking_gnn.py",
    "Fixed indentation in core/src/aura_intelligence/real_components/real_moe_router.py",
    "Fixed indentation in core/src/aura_intelligence/bio_homeostatic/production_metabolic_manager.py",
    "Fixed indentation in core/src/aura_intelligence/bio_homeostatic/metabolic_manager.py",
    "Fixed indentation in core/src/aura_intelligence/bio_homeostatic/homeostatic_coordinator.py",
    "Fixed indentation in core/src/aura_intelligence/api/streaming_pro.py",
    "Fixed indentation in core/src/aura_intelligence/api/streaming.py",
    "Fixed indentation in core/src/aura_intelligence/api/neural_mesh_dashboard.py",
    "Fixed indentation in core/src/aura_intelligence/api/search.py",
    "Fixed indentation in core/src/aura_intelligence/dpo/real_constitutional_ai.py",
    "Fixed indentation in core/src/aura_intelligence/dpo/production_dpo.py",
    "Fixed indentation in core/src/aura_intelligence/dpo/preference_optimizer.py",
    "Fixed indentation in core/src/aura_intelligence/consensus/byzantine.py",
    "Fixed indentation in core/src/aura_intelligence/consensus/__init__.py",
    "Fixed indentation in core/src/aura_intelligence/consensus/raft.py",
    "Fixed indentation in core/src/aura_intelligence/consensus/simple.py",
    "Fixed indentation in core/src/aura_intelligence/consensus/manager.py",
    "Fixed indentation in core/src/aura_intelligence/consensus/examples.py",
    "Fixed indentation in core/src/aura_intelligence/spiking_gnn/neuromorphic_council.py",
    "Fixed indentation in core/src/aura_intelligence/spiking_gnn/real_spiking_gnn.py",
    "Fixed indentation in core/src/aura_intelligence/events/consumers.py",
    "Fixed indentation in core/src/aura_intelligence/events/bus.py",
    "Fixed indentation in core/src/aura_intelligence/events/producers.py",
    "Fixed indentation in core/src/aura_intelligence/events/event_bus.py",
    "Fixed indentation in core/src/aura_intelligence/events/streams.py",
    "Fixed indentation in core/src/aura_intelligence/events/connectors.py",
    "Fixed indentation in core/src/aura_intelligence/events/real_event_sourcing.py",
    "Fixed indentation in core/src/aura_intelligence/events/schemas.py",
    "Fixed indentation in core/src/aura_intelligence/network/diff_comm_v2b.py",
    "Fixed indentation in core/src/aura_intelligence/network/websub_protocol.py",
    "Fixed indentation in core/src/aura_intelligence/network/real_protocols.py",
    "Fixed indentation in core/src/aura_intelligence/enterprise/__init__.py",
    "Fixed indentation in core/src/aura_intelligence/enterprise/search_api.py",
    "Fixed indentation in core/src/aura_intelligence/enterprise/vector_database.py",
    "Fixed indentation in core/src/aura_intelligence/enterprise/enhanced_knowledge_graph.py",
    "Fixed indentation in core/src/aura_intelligence/enterprise/data_structures.py",
    "Fixed indentation in core/src/aura_intelligence/chaos/experiments.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/langgraph_collective.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/temporal_signalfirst.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/dlq_handler.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/langgraph_adapter.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/working_orchestrator.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/langgraph_workflows.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/real_agent_workflows.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/event_driven_triggers.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/workflows.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/adaptive_checkpoint.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/tda_coordinator.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/feature_flags.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/bus_metrics.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/bus_protocol.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/checkpoints.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/pro_orchestration_system.py",
    "Fixed indentation in core/src/aura_intelligence/persistence/state_manager.py",
    "Fixed indentation in core/src/aura_intelligence/models/phformer_tiny.py",
    "Fixed indentation in core/src/aura_intelligence/infrastructure/gemini_client.py",
    "Fixed indentation in core/src/aura_intelligence/infrastructure/kafka_event_mesh.py",
    "Fixed indentation in core/src/aura_intelligence/infrastructure/guardrails.py",
    "Fixed indentation in core/src/aura_intelligence/advanced_processing/mixture_of_depths.py",
    "Fixed indentation in core/src/aura_intelligence/advanced_processing/real_pearl_inference.py",
    "Fixed indentation in core/src/aura_intelligence/consciousness/attention.py",
    "Fixed indentation in core/src/aura_intelligence/consciousness/executive_functions.py",
    "Fixed indentation in core/src/aura_intelligence/consciousness/global_workspace.py",
    "Fixed indentation in core/src/aura_intelligence/distributed/ray_serve_deployment.py",
    "Fixed indentation in core/src/aura_intelligence/distributed/real_ray_system.py",
    "Fixed indentation in core/src/aura_intelligence/distributed/actor_system.py",
    "Fixed indentation in core/src/aura_intelligence/governance/constitutional_ai_3.py",
    "Fixed indentation in core/src/aura_intelligence/governance/database.py",
    "Fixed indentation in core/src/aura_intelligence/governance/risk_engine.py",
    "Fixed indentation in core/src/aura_intelligence/governance/autonomous_governance.py",
    "Fixed indentation in core/src/aura_intelligence/governance/constitutional_ai.py",
    "Fixed indentation in core/src/aura_intelligence/governance/executor.py",
    "Fixed indentation in core/src/aura_intelligence/governance/real_policy_engine.py",
    "Fixed indentation in core/src/aura_intelligence/monitoring/real_time_dashboard.py",
    "Fixed indentation in core/src/aura_intelligence/monitoring/production_monitor.py",
    "Fixed indentation in core/src/aura_intelligence/monitoring/business_metrics.py",
    "Fixed indentation in core/src/aura_intelligence/neural/liquid_2025.py",
    "Fixed indentation in core/src/aura_intelligence/neural/lnn_workflows.py",
    "Fixed indentation in core/src/aura_intelligence/neural/context_integration.py",
    "Fixed indentation in core/src/aura_intelligence/neural/lnn_consensus.py",
    "Fixed indentation in core/src/aura_intelligence/neural/liquid_real.py",
    "Fixed indentation in core/src/aura_intelligence/neural/memory_hooks.py",
    "Fixed indentation in core/src/aura_intelligence/neural/lnn.py",
    "Fixed indentation in core/src/aura_intelligence/neural/mamba2_integration.py",
    "Fixed indentation in core/src/aura_intelligence/graph/neo4j_integration.py",
    "Fixed indentation in core/src/aura_intelligence/spiking/real_spiking_networks.py",
    "Fixed indentation in core/src/aura_intelligence/spiking/advanced_spiking_gnn.py",
    "Fixed indentation in core/src/aura_intelligence/spiking/council_sgnn.py",
    "Fixed indentation in core/src/aura_intelligence/core/agents.py",
    "Fixed indentation in core/src/aura_intelligence/core/config.py",
    "Fixed indentation in core/src/aura_intelligence/core/self_healing.py",
    "Fixed indentation in core/src/aura_intelligence/core/topology.py",
    "Fixed indentation in core/src/aura_intelligence/core/knowledge.py",
    "Fixed indentation in core/src/aura_intelligence/core/system.py",
    "Fixed indentation in core/src/aura_intelligence/core/testing.py",
    "Fixed indentation in core/src/aura_intelligence/core/unified_interfaces.py",
    "Fixed indentation in core/src/aura_intelligence/core/consciousness.py",
    "Fixed indentation in core/src/aura_intelligence/core/memory.py",
    "Fixed indentation in core/src/aura_intelligence/core/types.py",
    "Fixed indentation in core/src/aura_intelligence/core/exceptions.py",
    "Fixed indentation in core/src/aura_intelligence/core/unified_system.py",
    "Fixed indentation in core/src/aura_intelligence/core/unified_config.py",
    "Fixed indentation in core/src/aura_intelligence/core/interfaces.py",
    "Fixed indentation in core/src/aura_intelligence/core/error_topology.py",
    "Fixed indentation in core/src/aura_intelligence/inference/pearl_engine.py",
    "Fixed indentation in core/src/aura_intelligence/config/base.py",
    "Fixed indentation in core/src/aura_intelligence/agents/real_agent_system.py",
    "Fixed indentation in core/src/aura_intelligence/agents/graph_enhanced_rl.py",
    "Fixed indentation in core/src/aura_intelligence/agents/clean_agents.py",
    "Fixed indentation in core/src/aura_intelligence/agents/supervisor.py",
    "Fixed indentation in core/src/aura_intelligence/agents/enhanced_council.py",
    "Fixed indentation in core/src/aura_intelligence/agents/observability.py",
    "Fixed indentation in core/src/aura_intelligence/agents/base.py",
    "Fixed indentation in core/src/aura_intelligence/agents/tda_analyzer.py",
    "Fixed indentation in core/src/aura_intelligence/agents/simple_agent.py",
    "Fixed indentation in core/src/aura_intelligence/agents/working_council_agent.py",
    "Fixed indentation in core/src/aura_intelligence/agents/agent_consolidation.py",
    "Fixed indentation in core/src/aura_intelligence/agents/validator.py",
    "Fixed indentation in core/src/aura_intelligence/agents/dpo_trainer.py",
    "Fixed indentation in core/src/aura_intelligence/agents/working_agents.py",
    "Fixed indentation in core/src/aura_intelligence/agents/unified_agent_system.py",
    "Fixed indentation in core/src/aura_intelligence/agents/consolidated_agents.py",
    "Fixed indentation in core/src/aura_intelligence/communication/neural_mesh.py",
    "Fixed indentation in core/src/aura_intelligence/communication/nats_a2a.py",
    "Fixed indentation in core/src/aura_intelligence/collective/graph_builder.py",
    "Fixed indentation in core/src/aura_intelligence/collective/supervisor.py",
    "Fixed indentation in core/src/aura_intelligence/collective/memory_manager.py",
    "Fixed indentation in core/src/aura_intelligence/collective/orchestrator.py",
    "Fixed indentation in core/src/aura_intelligence/collective/context_engine.py",
    "Fixed indentation in core/src/aura_intelligence/security/kmux_ebpf.py",
    "Fixed indentation in core/src/aura_intelligence/security/hash_with_carry.py",
    "Fixed indentation in core/src/aura_intelligence/integration/lnn_council_system.py",
    "Fixed indentation in core/src/aura_intelligence/integration/mcp_communication_hub.py",
    "Fixed indentation in core/src/aura_intelligence/integration/mem0_neo4j_bridge.py",
    "Fixed indentation in core/src/aura_intelligence/integration/tda_neo4j_bridge.py",
    "Fixed indentation in core/src/aura_intelligence/integration/real_system_2025.py",
    "Fixed indentation in core/src/aura_intelligence/integration/advanced_workflow_integration.py",
    "Fixed indentation in core/src/aura_intelligence/integration/complete_system_2025.py",
    "Fixed indentation in core/src/aura_intelligence/components/real_registry.py",
    "Fixed indentation in core/src/aura_intelligence/components/real_components.py",
    "Fixed indentation in core/src/aura_intelligence/components/production_registry.py",
    "Fixed indentation in core/src/aura_intelligence/components/async_batch_processor.py",
    "Fixed indentation in core/src/aura_intelligence/components/registry.py",
    "Fixed indentation in core/src/aura_intelligence/components/working_registry.py",
    "Fixed indentation in core/src/aura_intelligence/neuromorphic/spiking_gnn.py",
    "Fixed indentation in core/src/aura_intelligence/swarm_intelligence/ant_colony_detection.py",
    "Fixed indentation in core/src/aura_intelligence/testing/cicd_automation.py",
    "Fixed indentation in core/src/aura_intelligence/testing/advanced_chaos.py",
    "Fixed indentation in core/src/aura_intelligence/testing/benchmark_framework.py",
    "Fixed indentation in core/src/aura_intelligence/testing/load_framework.py",
    "Fixed indentation in core/src/aura_intelligence/testing/real_test_framework.py",
    "Fixed indentation in core/src/aura_intelligence/testing/streaming_tda_tests.py",
    "Fixed indentation in core/src/aura_intelligence/testing/chaos_engineering.py",
    "Fixed indentation in core/src/aura_intelligence/communication/collective/graph_builder.py",
    "Fixed indentation in core/src/aura_intelligence/communication/collective/supervisor.py",
    "Fixed indentation in core/src/aura_intelligence/communication/collective/memory_manager.py",
    "Fixed indentation in core/src/aura_intelligence/communication/collective/orchestrator.py",
    "Fixed indentation in core/src/aura_intelligence/communication/collective/context_engine.py",
    "Fixed indentation in core/src/aura_intelligence/agents/memory/unified.py",
    "Fixed indentation in core/src/aura_intelligence/agents/resilience/bulkhead.py",
    "Fixed indentation in core/src/aura_intelligence/agents/resilience/fallback_agent.py",
    "Fixed indentation in core/src/aura_intelligence/agents/resilience/retry_policy.py",
    "Fixed indentation in core/src/aura_intelligence/agents/resilience/circuit_breaker.py",
    "Fixed indentation in core/src/aura_intelligence/agents/factories/unified_factory.py",
    "Fixed indentation in core/src/aura_intelligence/agents/factories/agent_factory.py",
    "Fixed indentation in core/src/aura_intelligence/agents/workflows/simple_chain.py",
    "Fixed indentation in core/src/aura_intelligence/agents/schemas/crypto.py",
    "Fixed indentation in core/src/aura_intelligence/agents/schemas/enums.py",
    "Fixed indentation in core/src/aura_intelligence/agents/schemas/base.py",
    "Fixed indentation in core/src/aura_intelligence/agents/schemas/state.py",
    "Fixed indentation in core/src/aura_intelligence/agents/schemas/tracecontext.py",
    "Fixed indentation in core/src/aura_intelligence/agents/real_agents/optimizer_agent.py",
    "Fixed indentation in core/src/aura_intelligence/agents/real_agents/researcher_agent.py",
    "Fixed indentation in core/src/aura_intelligence/agents/real_agents/guardian_agent.py",
    "Fixed indentation in core/src/aura_intelligence/agents/executor/agent.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_gradual_integration.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/steps.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_observability_comprehensive.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/lnn_council.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_real_integration_simple.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/production_lnn_council.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/context_aware_lnn.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_fallback_comprehensive.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_end_to_end_integration.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/models.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_observability_standalone.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_decision_pipeline.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/knowledge_context.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/confidence_scoring.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/decision_pipeline.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/fallback.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/neural_engine.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_final_working.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_knowledge_integration.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/memory_learning.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_simple_components.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_memory_simple.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_kg_final.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_confidence_standalone.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_confidence_scoring.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_models_standalone.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_modular_simple.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_lnn_council_agent.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_integration_standalone.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_fallback_standalone.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/workflow.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/agent_council.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_kg_simple.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_components_direct.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_pipeline_integration.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_confidence_scoring_simple.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/memory_context.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_context_simple.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/lnn_council_agent.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_context_aware.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_memory_integration.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/test_knowledge_graph.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/standalone_test.py",
    "Fixed indentation in core/src/aura_intelligence/agents/v2/observer.py",
    "Fixed indentation in core/src/aura_intelligence/agents/evolver/agent.py",
    "Fixed indentation in core/src/aura_intelligence/agents/analyst/agent.py",
    "Fixed indentation in core/src/aura_intelligence/agents/temporal/worker.py",
    "Fixed indentation in core/src/aura_intelligence/agents/temporal/__init__.py",
    "Fixed indentation in core/src/aura_intelligence/agents/temporal/workflows.py",
    "Fixed indentation in core/src/aura_intelligence/agents/observer/agent.py",
    "Fixed indentation in core/src/aura_intelligence/agents/observer/observer_agent.py",
    "Fixed indentation in core/src/aura_intelligence/agents/communication/protocol.py",
    "Fixed indentation in core/src/aura_intelligence/agents/base_classes/instrumentation.py",
    "Fixed indentation in core/src/aura_intelligence/agents/base_classes/agent.py",
    "Fixed indentation in core/src/aura_intelligence/agents/observer/tests/test_agent.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/lnn/agent.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/lnn/implementations.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/lnn/registry.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/lnn/contracts.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/lnn/neural/engine.py",
    "Fixed indentation in core/src/aura_intelligence/agents/council/lnn/neural/layers.py",
    "Fixed indentation in core/src/aura_intelligence/core/consensus/byzantine.py",
    "Fixed indentation in core/src/aura_intelligence/core/consensus/__init__.py",
    "Fixed indentation in core/src/aura_intelligence/core/consensus/raft.py",
    "Fixed indentation in core/src/aura_intelligence/core/consensus/simple.py",
    "Fixed indentation in core/src/aura_intelligence/core/consensus/manager.py",
    "Fixed indentation in core/src/aura_intelligence/core/consensus/examples.py",
    "Fixed indentation in core/src/aura_intelligence/governance/active_mode/deployment.py",
    "Fixed indentation in core/src/aura_intelligence/governance/active_mode/human_approval.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/production/scaling.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/production/alerting.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/production/monitoring.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/observability/hybrid.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/observability/core.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/observability/test_hybrid_observability.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/observability/tracers.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/observability/collectors.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/observability/integration.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/workflows/config.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/workflows/tools.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/durable/checkpoint_manager.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/durable/test_workflow_observability.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/durable/saga_patterns.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/durable/workflow_observability.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/durable/hybrid_checkpointer.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/durable/saga_compensation_example.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/durable/temporal_orchestrator.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/durable/test_saga_compensation.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/events/test_semantic_orchestrator.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/events/semantic_orchestrator.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/events/event_router.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/events/consensus_orchestrator.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/events/advanced_patterns.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/distributed/distributed_coordinator.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/distributed/test_hierarchical_orchestrator.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/distributed/ray_orchestrator.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/distributed/load_balancing.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/distributed/hierarchical_orchestrator.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/distributed/test_distributed_coordination.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/distributed/consensus.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/distributed/coordination_manager.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/semantic/semantic_patterns.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/semantic/tda_integration.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/semantic/langgraph_orchestrator.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/semantic/semantic_router.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/distributed/crewai/flow_engine.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/distributed/crewai/geometric_space.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/distributed/crewai/orchestrator.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/distributed/crewai/test_orchestrator.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/workflows/nodes/lnn_supervisor_integration.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/workflows/nodes/advanced_supervisor_2025.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/workflows/nodes/supervisor.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/workflows/nodes/observer.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/workflows/nodes/analyst.py",
    "Fixed indentation in core/src/aura_intelligence/orchestration/workflows/nodes/tda_supervisor_integration.py",
    "Fixed indentation in core/src/aura_intelligence/enterprise/mem0_semantic/sync.py",
    "Fixed indentation in core/src/aura_intelligence/enterprise/mem0_semantic/rank.py",
    "Fixed indentation in core/src/aura_intelligence/enterprise/mem0_semantic/consolidation.py",
    "Fixed indentation in core/src/aura_intelligence/enterprise/mem0_hot/vectorize.py",
    "Fixed indentation in core/src/aura_intelligence/enterprise/mem0_hot/settings.py",
    "Fixed indentation in core/src/aura_intelligence/enterprise/mem0_hot/scheduler.py",
    "Fixed indentation in core/src/aura_intelligence/enterprise/mem0_hot/archive.py",
    "Fixed indentation in core/src/aura_intelligence/enterprise/mem0_hot/ingest.py",
    "Fixed indentation in core/src/aura_intelligence/enterprise/mem0_hot/resilient_ops.py",
    "Fixed indentation in core/src/aura_intelligence/enterprise/mem0_hot/resilience.py",
    "Fixed indentation in core/src/aura_intelligence/integrations/integration/advanced_workflow_integration.py",
    "Fixed indentation in core/src/aura_intelligence/memory/benchmarks/run_production_benchmark.py",
    "Fixed indentation in core/src/aura_intelligence/tda/streaming/event_adapters.py",
    "Fixed indentation in core/src/aura_intelligence/tda/streaming/incremental_persistence.py",
    "Fixed indentation in core/src/aura_intelligence/tda/streaming/parallel_processor.py",
    "Fixed specific issues in core/src/aura_intelligence/collective/memory_manager.py",
    "Fixed specific issues in core/src/aura_intelligence/collective/graph_builder.py",
    "Fixed specific issues in core/src/aura_intelligence/collective/context_engine.py",
    "Fixed specific issues in core/src/aura_intelligence/collective/orchestrator.py",
    "Fixed specific issues in core/src/aura_intelligence/infrastructure/kafka_event_mesh.py",
    "Fixed specific issues in core/src/aura_intelligence/observability/langsmith_integration.py",
    "Fixed circular imports in core/src/aura_intelligence/__init__.py",
    "Fixed imports in core/src/aura_intelligence/unified_brain.py",
    "Fixed collective init imports in core/src/aura_intelligence/collective/__init__.py"
  ],
  "errors_found": [
    "core/src/aura_intelligence/production_system_2025.py: expected an indented block after function definition on line 101 (<unknown>, line 102)",
    "core/src/aura_intelligence/ultra_deep_2025.py: expected an indented block after function definition on line 47 (<unknown>, line 48)",
    "core/src/aura_intelligence/moe/real_switch_moe.py: expected an indented block after 'if' statement on line 28 (<unknown>, line 30)",
    "core/src/aura_intelligence/tda/matrix_ph_gpu.py: expected an indented block after function definition on line 80 (<unknown>, line 87)",
    "core/src/aura_intelligence/tda/real_tda.py: expected an indented block after function definition on line 72 (<unknown>, line 73)",
    "core/src/aura_intelligence/tda/core.py: expected an indented block after function definition on line 244 (<unknown>, line 245)",
    "core/src/aura_intelligence/tda/algorithms.py: expected an indented block after 'for' statement on line 71 (<unknown>, line 72)",
    "core/src/aura_intelligence/tda/cuda_kernels.py: expected 'except' or 'finally' block (<unknown>, line 131)",
    "core/src/aura_intelligence/memory_tiers/real_hybrid_memory.py: expected an indented block after 'elif' statement on line 103 (<unknown>, line 104)",
    "core/src/aura_intelligence/lnn/real_mit_lnn.py: expected an indented block after 'if' statement on line 29 (<unknown>, line 31)",
    "core/src/aura_intelligence/lnn/core.py: unexpected unindent (<unknown>, line 53)",
    "core/src/aura_intelligence/memory/neo4j_motifcost.py: expected an indented block after 'with' statement on line 111 (<unknown>, line 113)",
    "core/src/aura_intelligence/memory/test_decorator_ordering.py: expected an indented block after function definition on line 67 (<unknown>, line 68)",
    "core/src/aura_intelligence/memory/test_critical_fixes.py: expected an indented block after 'for' statement on line 185 (<unknown>, line 186)",
    "core/src/aura_intelligence/memory/shape_aware_memory.py: expected an indented block after 'if' statement on line 48 (<unknown>, line 50)",
    "core/src/aura_intelligence/memory/neo4j_etl.py: expected an indented block after 'with' statement on line 70 (<unknown>, line 72)",
    "core/src/aura_intelligence/memory/causal_pattern_store.py: expected an indented block after 'with' statement on line 62 (<unknown>, line 64)",
    "core/src/aura_intelligence/memory/shape_memory_v2.py: expected an indented block after function definition on line 119 (<unknown>, line 120)",
    "core/src/aura_intelligence/resilience/timeout.py: expected an indented block after function definition on line 110 (<unknown>, line 111)",
    "core/src/aura_intelligence/resilience/__init__.py: expected an indented block after function definition on line 106 (<unknown>, line 107)",
    "core/src/aura_intelligence/streaming/kafka_integration.py: expected an indented block after function definition on line 40 (<unknown>, line 41)",
    "core/src/aura_intelligence/observability/telemetry.py: expected an indented block after function definition on line 93 (<unknown>, line 94)",
    "core/src/aura_intelligence/observability/health_monitor.py: expected an indented block after 'try' statement on line 165 (<unknown>, line 167)",
    "core/src/aura_intelligence/observability/knowledge_graph.py: expected an indented block after function definition on line 64 (<unknown>, line 65)",
    "core/src/aura_intelligence/observability/shadow_mode_logger.py: expected an indented block after function definition on line 84 (<unknown>, line 85)",
    "core/src/aura_intelligence/observability/structured_logging.py: expected an indented block after function definition on line 57 (<unknown>, line 58)",
    "core/src/aura_intelligence/observability/pro_observability_system.py: expected an indented block after 'for' statement on line 373 (<unknown>, line 374)",
    "core/src/aura_intelligence/observability/prometheus_integration.py: expected an indented block after function definition on line 156 (<unknown>, line 158)",
    "core/src/aura_intelligence/observability/tracing.py: expected an indented block after function definition on line 92 (<unknown>, line 93)",
    "core/src/aura_intelligence/innovations/hybrid_memory_2025.py: expected an indented block after function definition on line 47 (<unknown>, line 48)",
    "core/src/aura_intelligence/utils/decorators.py: expected an indented block after function definition on line 64 (<unknown>, line 65)",
    "core/src/aura_intelligence/adapters/redis_high_performance.py: expected an indented block after function definition on line 96 (<unknown>, line 97)",
    "core/src/aura_intelligence/adapters/redis_adapter.py: expected an indented block after function definition on line 113 (<unknown>, line 114)",
    "core/src/aura_intelligence/workflows/real_temporal_workflows.py: expected an indented block after function definition on line 17 (<unknown>, line 18)",
    "core/src/aura_intelligence/consensus/raft.py: expected an indented block after function definition on line 60 (<unknown>, line 61)",
    "core/src/aura_intelligence/consensus/manager.py: expected an indented block after function definition on line 91 (<unknown>, line 92)",
    "core/src/aura_intelligence/consensus/examples.py: expected an indented block after 'else' statement on line 57 (<unknown>, line 58)",
    "core/src/aura_intelligence/events/consumers.py: expected an indented block after 'else' statement on line 114 (<unknown>, line 115)",
    "core/src/aura_intelligence/events/producers.py: expected an indented block after function definition on line 173 (<unknown>, line 181)",
    "core/src/aura_intelligence/events/streams.py: expected an indented block after function definition on line 96 (<unknown>, line 97)",
    "core/src/aura_intelligence/events/connectors.py: expected an indented block after 'with' statement on line 79 (<unknown>, line 86)",
    "core/src/aura_intelligence/enterprise/search_api.py: expected 'except' or 'finally' block (<unknown>, line 130)",
    "core/src/aura_intelligence/enterprise/knowledge_graph.py: expected an indented block after 'try' statement on line 79 (<unknown>, line 81)",
    "core/src/aura_intelligence/enterprise/enhanced_knowledge_graph.py: expected an indented block after function definition on line 63 (<unknown>, line 64)",
    "core/src/aura_intelligence/chaos/experiments.py: expected an indented block after function definition on line 40 (<unknown>, line 41)",
    "core/src/aura_intelligence/orchestration/bus_metrics.py: expected 'except' or 'finally' block (<unknown>, line 103)",
    "core/src/aura_intelligence/orchestration/checkpoints.py: expected an indented block after function definition on line 41 (<unknown>, line 42)",
    "core/src/aura_intelligence/persistence/state_manager.py: expected an indented block after function definition on line 43 (<unknown>, line 44)",
    "core/src/aura_intelligence/models/phformer_tiny.py: expected an indented block after function definition on line 65 (<unknown>, line 71)",
    "core/src/aura_intelligence/governance/database.py: expected 'except' or 'finally' block (<unknown>, line 93)",
    "core/src/aura_intelligence/governance/real_policy_engine.py: expected an indented block after function definition on line 16 (<unknown>, line 17)",
    "core/src/aura_intelligence/monitoring/production_monitor.py: expected 'except' or 'finally' block (<unknown>, line 103)",
    "core/src/aura_intelligence/neural/context_integration.py: expected an indented block after 'for' statement on line 41 (<unknown>, line 42)",
    "core/src/aura_intelligence/neural/liquid_real.py: expected an indented block after function definition on line 23 (<unknown>, line 24)",
    "core/src/aura_intelligence/neural/memory_hooks.py: expected an indented block after 'except' statement on line 80 (<unknown>, line 81)",
    "core/src/aura_intelligence/neural/lnn.py: expected an indented block after function definition on line 148 (<unknown>, line 149)",
    "core/src/aura_intelligence/graph/neo4j_integration.py: expected an indented block after function definition on line 24 (<unknown>, line 25)",
    "core/src/aura_intelligence/core/config.py: expected an indented block after function definition on line 68 (<unknown>, line 69)",
    "core/src/aura_intelligence/core/system.py: invalid syntax (<unknown>, line 166)",
    "core/src/aura_intelligence/core/testing.py: expected an indented block after function definition on line 105 (<unknown>, line 106)",
    "core/src/aura_intelligence/core/memory.py: expected an indented block after 'else' statement on line 54 (<unknown>, line 55)",
    "core/src/aura_intelligence/agents/real_agent_system.py: expected an indented block after function definition on line 76 (<unknown>, line 77)",
    "core/src/aura_intelligence/agents/supervisor.py: expected an indented block after function definition on line 67 (<unknown>, line 68)",
    "core/src/aura_intelligence/agents/observability.py: expected an indented block after function definition on line 157 (<unknown>, line 158)",
    "core/src/aura_intelligence/collective/graph_builder.py: expected an indented block after 'while' statement on line 127 (<unknown>, line 128)",
    "core/src/aura_intelligence/collective/memory_manager.py: expected an indented block after class definition on line 50 (<unknown>, line 51)",
    "core/src/aura_intelligence/collective/context_engine.py: expected an indented block after class definition on line 48 (<unknown>, line 49)",
    "core/src/aura_intelligence/security/kmux_ebpf.py: expected 'except' or 'finally' block (<unknown>, line 71)",
    "core/src/aura_intelligence/security/hash_with_carry.py: expected an indented block after function definition on line 52 (<unknown>, line 53)",
    "core/src/aura_intelligence/integration/mem0_neo4j_bridge.py: expected an indented block after 'with' statement on line 75 (<unknown>, line 76)",
    "core/src/aura_intelligence/integration/tda_neo4j_bridge.py: invalid syntax (<unknown>, line 48)",
    "core/src/aura_intelligence/integration/real_system_2025.py: expected 'except' or 'finally' block (<unknown>, line 46)",
    "core/src/aura_intelligence/integration/advanced_workflow_integration.py: expected an indented block after function definition on line 136 (<unknown>, line 137)",
    "core/src/aura_intelligence/components/real_registry.py: expected an indented block after 'if' statement on line 158 (<unknown>, line 160)",
    "core/src/aura_intelligence/components/real_components.py: expected an indented block after function definition on line 32 (<unknown>, line 33)",
    "core/src/aura_intelligence/components/production_registry.py: invalid syntax (<unknown>, line 63)",
    "core/src/aura_intelligence/components/async_batch_processor.py: expected an indented block after function definition on line 73 (<unknown>, line 74)",
    "core/src/aura_intelligence/swarm_intelligence/ant_colony_detection.py: expected 'except' or 'finally' block (<unknown>, line 32)",
    "core/src/aura_intelligence/testing/benchmark_framework.py: expected an indented block after function definition on line 111 (<unknown>, line 112)",
    "core/src/aura_intelligence/testing/streaming_tda_tests.py: expected an indented block after 'for' statement on line 188 (<unknown>, line 189)",
    "core/src/aura_intelligence/testing/chaos_engineering.py: expected an indented block after function definition on line 86 (<unknown>, line 92)",
    "core/src/aura_intelligence/communication/collective/graph_builder.py: expected an indented block after function definition on line 92 (<unknown>, line 93)",
    "core/src/aura_intelligence/communication/collective/supervisor.py: expected an indented block after 'try' statement on line 100 (<unknown>, line 102)",
    "core/src/aura_intelligence/communication/collective/memory_manager.py: expected an indented block after class definition on line 47 (<unknown>, line 48)",
    "core/src/aura_intelligence/communication/collective/context_engine.py: expected an indented block after class definition on line 30 (<unknown>, line 31)",
    "core/src/aura_intelligence/agents/resilience/retry_policy.py: expected an indented block after function definition on line 59 (<unknown>, line 60)",
    "core/src/aura_intelligence/agents/factories/unified_factory.py: expected an indented block after function definition on line 76 (<unknown>, line 77)",
    "core/src/aura_intelligence/agents/factories/agent_factory.py: expected an indented block after function definition on line 61 (<unknown>, line 62)",
    "core/src/aura_intelligence/agents/executor/agent.py: expected an indented block after class definition on line 31 (<unknown>, line 32)",
    "core/src/aura_intelligence/agents/council/test_gradual_integration.py: expected 'except' or 'finally' block (<unknown>, line 30)",
    "core/src/aura_intelligence/agents/council/test_observability_comprehensive.py: expected an indented block after 'for' statement on line 342 (<unknown>, line 343)",
    "core/src/aura_intelligence/agents/council/lnn_council.py: expected an indented block after function definition on line 91 (<unknown>, line 92)",
    "core/src/aura_intelligence/agents/council/production_lnn_council.py: expected an indented block after function definition on line 84 (<unknown>, line 85)",
    "core/src/aura_intelligence/agents/council/test_observability_standalone.py: expected an indented block after function definition on line 114 (<unknown>, line 116)",
    "core/src/aura_intelligence/agents/council/knowledge_context.py: expected an indented block after 'try' statement on line 87 (<unknown>, line 89)",
    "core/src/aura_intelligence/agents/council/test_simple_components.py: expected an indented block after 'try' statement on line 18 (<unknown>, line 20)",
    "core/src/aura_intelligence/agents/council/test_fallback_standalone.py: expected an indented block after function definition on line 92 (<unknown>, line 93)",
    "core/src/aura_intelligence/agents/council/test_components_direct.py: expected an indented block after 'try' statement on line 23 (<unknown>, line 25)",
    "core/src/aura_intelligence/agents/evolver/agent.py: expected an indented block after 'for' statement on line 53 (<unknown>, line 54)",
    "core/src/aura_intelligence/agents/analyst/agent.py: expected an indented block after class definition on line 31 (<unknown>, line 32)",
    "core/src/aura_intelligence/agents/temporal/worker.py: expected an indented block after function definition on line 107 (<unknown>, line 108)",
    "core/src/aura_intelligence/agents/temporal/gpu_allocation_activities.py: unexpected unindent (<unknown>, line 92)",
    "core/src/aura_intelligence/agents/base_classes/instrumentation.py: expected an indented block after function definition on line 52 (<unknown>, line 53)",
    "core/src/aura_intelligence/agents/base_classes/agent.py: expected an indented block after function definition on line 73 (<unknown>, line 74)",
    "core/src/aura_intelligence/agents/observer/tests/test_agent.py: expected an indented block after 'for' statement on line 272 (<unknown>, line 273)",
    "core/src/aura_intelligence/agents/council/lnn/registry.py: expected an indented block after function definition on line 24 (<unknown>, line 25)",
    "core/src/aura_intelligence/core/consensus/raft.py: expected an indented block after function definition on line 60 (<unknown>, line 61)",
    "core/src/aura_intelligence/core/consensus/manager.py: expected an indented block after function definition on line 93 (<unknown>, line 94)",
    "core/src/aura_intelligence/core/consensus/examples.py: expected an indented block after 'else' statement on line 57 (<unknown>, line 58)",
    "core/src/aura_intelligence/orchestration/production/scaling.py: expected an indented block after function definition on line 89 (<unknown>, line 90)",
    "core/src/aura_intelligence/orchestration/production/monitoring.py: expected an indented block after function definition on line 67 (<unknown>, line 68)",
    "core/src/aura_intelligence/orchestration/observability/hybrid.py: expected an indented block after function definition on line 221 (<unknown>, line 222)",
    "core/src/aura_intelligence/orchestration/observability/core.py: unexpected unindent (<unknown>, line 54)",
    "core/src/aura_intelligence/orchestration/observability/test_hybrid_observability.py: expected an indented block after function definition on line 221 (<unknown>, line 222)",
    "core/src/aura_intelligence/orchestration/observability/tracers.py: expected an indented block after function definition on line 69 (<unknown>, line 70)",
    "core/src/aura_intelligence/orchestration/observability/collectors.py: expected an indented block after function definition on line 54 (<unknown>, line 55)",
    "core/src/aura_intelligence/orchestration/workflows/tools.py: expected an indented block after function definition on line 33 (<unknown>, line 34)",
    "core/src/aura_intelligence/orchestration/durable/test_workflow_observability.py: invalid syntax (<unknown>, line 1)",
    "core/src/aura_intelligence/orchestration/durable/workflow_observability.py: expected an indented block after function definition on line 123 (<unknown>, line 124)",
    "core/src/aura_intelligence/orchestration/durable/hybrid_checkpointer.py: expected 'except' or 'finally' block (<unknown>, line 140)",
    "core/src/aura_intelligence/orchestration/durable/saga_compensation_example.py: expected an indented block after function definition on line 58 (<unknown>, line 59)",
    "core/src/aura_intelligence/orchestration/durable/test_saga_compensation.py: expected an indented block after function definition on line 64 (<unknown>, line 65)",
    "core/src/aura_intelligence/orchestration/events/test_semantic_orchestrator.py: expected an indented block after function definition on line 100 (<unknown>, line 101)",
    "core/src/aura_intelligence/orchestration/events/semantic_orchestrator.py: expected an indented block after function definition on line 65 (<unknown>, line 66)",
    "core/src/aura_intelligence/orchestration/events/advanced_patterns.py: expected an indented block after function definition on line 63 (<unknown>, line 64)",
    "core/src/aura_intelligence/orchestration/distributed/load_balancing.py: expected an indented block after 'for' statement on line 81 (<unknown>, line 82)",
    "core/src/aura_intelligence/orchestration/distributed/test_distributed_coordination.py: expected an indented block after function definition on line 34 (<unknown>, line 35)",
    "core/src/aura_intelligence/orchestration/distributed/consensus.py: expected an indented block after 'for' statement on line 91 (<unknown>, line 92)",
    "core/src/aura_intelligence/orchestration/distributed/coordination_manager.py: expected an indented block after function definition on line 95 (<unknown>, line 96)",
    "core/src/aura_intelligence/orchestration/semantic/semantic_patterns.py: expected an indented block after function definition on line 53 (<unknown>, line 58)",
    "core/src/aura_intelligence/orchestration/workflows/nodes/lnn_supervisor_integration.py: unexpected indent (<unknown>, line 1325)",
    "core/src/aura_intelligence/orchestration/workflows/nodes/observer.py: invalid syntax (<unknown>, line 14)",
    "core/src/aura_intelligence/orchestration/workflows/nodes/analyst.py: invalid syntax (<unknown>, line 15)",
    "core/src/aura_intelligence/enterprise/mem0_semantic/sync.py: expected an indented block after 'try' statement on line 110 (<unknown>, line 112)",
    "core/src/aura_intelligence/enterprise/mem0_semantic/rank.py: expected an indented block after 'except' statement on line 153 (<unknown>, line 154)",
    "core/src/aura_intelligence/enterprise/mem0_hot/vectorize.py: expected an indented block after function definition on line 62 (<unknown>, line 63)",
    "core/src/aura_intelligence/enterprise/mem0_hot/scheduler.py: expected an indented block after 'try' statement on line 92 (<unknown>, line 94)",
    "core/src/aura_intelligence/enterprise/mem0_hot/archive.py: expected an indented block after 'except' statement on line 257 (<unknown>, line 258)",
    "core/src/aura_intelligence/enterprise/mem0_hot/ingest.py: expected 'except' or 'finally' block (<unknown>, line 145)",
    "core/src/aura_intelligence/enterprise/mem0_hot/resilient_ops.py: expected an indented block after 'else' statement on line 71 (<unknown>, line 72)",
    "core/src/aura_intelligence/integrations/integration/advanced_workflow_integration.py: expected an indented block after function definition on line 136 (<unknown>, line 137)",
    "core/src/aura_intelligence/memory/benchmarks/run_production_benchmark.py: expected an indented block after function definition on line 45 (<unknown>, line 46)",
    "core/src/aura_intelligence/tda/streaming/incremental_persistence.py: expected an indented block after function definition on line 42 (<unknown>, line 43)"
  ],
  "validation_results": {
    "syntax_errors": 401,
    "import_errors": 0,
    "files_checked": 581
  }
}