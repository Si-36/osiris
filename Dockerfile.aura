# Multi-stage Docker build for AURA Intelligence System
FROM python:3.11-slim as base

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    make \
    curl \
    git \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd --create-home --shell /bin/bash aura
WORKDIR /app
RUN chown -R aura:aura /app

# Development stage
FROM base as development

USER aura

# Copy requirements first for better caching
COPY --chown=aura:aura requirements.txt .
RUN pip install --user -r requirements.txt

# Copy application code
COPY --chown=aura:aura . .

# Expose development ports
EXPOSE 8001 8002 8003

# Development command
CMD ["python3", "enhanced_production_api.py"]

# Production stage  
FROM base as production

USER aura

# Install production requirements
COPY --chown=aura:aura requirements-prod.txt requirements.txt
RUN pip install --user -r requirements.txt

# Copy only necessary files for production
COPY --chown=aura:aura enhanced_production_api.py .
COPY --chown=aura:aura monitoring_system.py .
COPY --chown=aura:aura core/ ./core/

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8003/health || exit 1

# Expose production port
EXPOSE 8003

# Production optimized command
CMD ["python3", "-O", "enhanced_production_api.py"]