{
  "stats": {
    "total_files": 581,
    "total_lines": 207454,
    "syntax_errors": 398,
    "read_errors": 0
  },
  "supervisor_files": [
    "orchestration/langgraph_workflows.py",
    "orchestration/real_agent_workflows.py",
    "orchestration/workflows.py",
    "components/real_components.py",
    "components/real_registry.py",
    "integration/advanced_workflow_integration.py",
    "agents/working_agents.py",
    "agents/__init__.py",
    "agents/supervisor.py",
    "collective/graph_builder.py",
    "collective/__init__.py",
    "collective/supervisor.py",
    "communication/collective/graph_builder.py",
    "communication/collective/__init__.py",
    "communication/collective/supervisor.py",
    "agents/factories/builders.py",
    "agents/factories/agent_factory.py",
    "agents/factories/unified_factory.py",
    "integrations/integration/advanced_workflow_integration.py",
    "orchestration/workflows/config.py",
    "orchestration/workflows/__init__.py",
    "orchestration/workflows/nodes/tda_supervisor_integration.py",
    "orchestration/workflows/nodes/advanced_supervisor_2025.py",
    "orchestration/workflows/nodes/__init__.py",
    "orchestration/workflows/nodes/supervisor.py",
    "orchestration/workflows/nodes/lnn_supervisor_integration.py"
  ],
  "tda_files": [
    "unified_brain.py",
    "enhanced_integration.py",
    "ultra_deep_2025.py",
    "enhanced_system_2025.py",
    "tda_engine.py",
    "distributed/real_ray_system.py",
    "distributed/actor_system.py",
    "governance/constitutional_ai.py",
    "orchestration/tda_coordinator.py",
    "orchestration/langgraph_workflows.py",
    "orchestration/pro_orchestration_system.py",
    "orchestration/langgraph_collective.py",
    "components/working_registry.py",
    "components/registry.py",
    "components/production_registry.py",
    "components/real_registry.py",
    "models/phformer_tiny.py",
    "moe/mixture_of_experts.py",
    "api/graphql_federation.py",
    "api/neural_mesh_dashboard.py",
    "api/neural_brain_api.py",
    "api/routes_tda.py",
    "api/streaming.py",
    "api/streaming_pro.py",
    "memory/shape_memory_v2_clean.py",
    "memory/fusion_scorer.py",
    "memory/async_shape_memory.py",
    "memory/fastrp.py",
    "memory/topo_features.py",
    "memory/fastrp_embeddings.py",
    "memory/memory_bus_adapter_clean.py",
    "memory/hyperoak_adapter.py",
    "memory/shape_memory_v2_prod.py",
    "memory/shape_memory_v2.py",
    "memory/causal_pattern_store.py",
    "memory/memory_bus_adapter.py",
    "memory/neo4j_etl.py",
    "memory/smoke_test.py",
    "memory/neo4j_motifcost.py",
    "memory/shape_aware_memory.py",
    "coral/communication.py",
    "enterprise/enhanced_knowledge_graph.py",
    "enterprise/data_structures.py",
    "enterprise/search_api.py",
    "enterprise/vector_database.py",
    "enterprise/__init__.py",
    "enterprise/knowledge_graph.py",
    "neural/__init__.py",
    "streaming/pro_streaming_system.py",
    "integrations/enhanced_workflow_orchestrator.py",
    "integrations/enhanced_workflow_integration.py",
    "integrations/mojo_tda_bridge.py",
    "integrations/workflow_orchestrator.py",
    "integration/mcp_communication_hub.py",
    "integration/tda_neo4j_bridge.py",
    "integration/lnn_council_system.py",
    "integration/mem0_neo4j_bridge.py",
    "integration/complete_system_2025.py",
    "tda/benchmarks.py",
    "tda/enhanced_pipeline.py",
    "tda/algorithms.py",
    "tda/unified_engine_2025.py",
    "tda/core.py",
    "tda/real_tda.py",
    "tda/models.py",
    "tda/matrix_ph_gpu.py",
    "tda/phformer_integration.py",
    "tda/production_fallbacks.py",
    "tda/service.py",
    "tda/topo_fuzzer_pro.py",
    "tda/gpu_acceleration.py",
    "tda/real_algorithms_fixed.py",
    "tda/__init__.py",
    "tda/cuda_kernels.py",
    "tda/multi_parameter_persistence.py",
    "tda/streaming_processor.py",
    "tda/lazy_witness.py",
    "tda/unified_engine.py",
    "agents/enhanced_council.py",
    "agents/tda_analyzer.py",
    "agents/graph_enhanced_rl.py",
    "agents/real_agent_system.py",
    "adapters/tda_mem0_adapter.py",
    "adapters/tda_neo4j_adapter.py",
    "adapters/tda_agent_context.py",
    "communication/neural_mesh.py",
    "events/streams.py",
    "events/__init__.py",
    "core/consciousness.py",
    "core/amplification.py",
    "core/system.py",
    "core/testing.py",
    "core/types.py",
    "core/topology.py",
    "core/config.py",
    "core/memory.py",
    "core/agents.py",
    "core/self_healing.py",
    "core/interfaces.py",
    "core/unified_config.py",
    "core/error_topology.py",
    "core/knowledge.py",
    "core/__init__.py",
    "core/exceptions.py",
    "multimodal/advanced_processing.py",
    "config/__init__.py",
    "spiking/council_sgnn.py",
    "observability/pro_observability_system.py",
    "observability/telemetry.py",
    "observability/prometheus_metrics.py",
    "testing/advanced_chaos.py",
    "testing/streaming_tda_tests.py",
    "agents/council/test_kg_simple.py",
    "agents/council/test_knowledge_integration.py",
    "agents/council/test_confidence_standalone.py",
    "agents/council/confidence_scoring.py",
    "agents/council/test_kg_final.py",
    "agents/council/test_knowledge_graph.py",
    "agents/council/knowledge_context.py",
    "agents/real_agents/guardian_agent.py",
    "agents/real_agents/researcher_agent.py",
    "agents/observer/observer_agent.py",
    "agents/schemas/log.py",
    "agents/evolver/agent.py",
    "agents/analyst/agent.py",
    "agents/council/lnn/implementations.py",
    "tda/streaming/incremental_persistence.py",
    "tda/streaming/windows.py",
    "tda/streaming/parallel_processor.py",
    "tda/streaming/event_adapters.py",
    "tda/streaming/__init__.py",
    "enterprise/mem0_search/endpoints.py",
    "enterprise/mem0_search/schemas.py",
    "enterprise/mem0_hot/vectorize.py",
    "enterprise/mem0_hot/archive.py",
    "enterprise/mem0_hot/ingest.py",
    "enterprise/mem0_hot/schema.py",
    "enterprise/mem0_hot/__init__.py",
    "enterprise/mem0_semantic/sync.py",
    "enterprise/mem0_semantic/consolidation.py",
    "enterprise/mem0_semantic/rank.py",
    "memory/benchmarks/run_production_benchmark.py",
    "orchestration/semantic/tda_integration.py",
    "orchestration/workflows/nodes/tda_supervisor_integration.py",
    "orchestration/workflows/nodes/advanced_supervisor_2025.py",
    "orchestration/workflows/nodes/supervisor.py",
    "orchestration/workflows/nodes/lnn_supervisor_integration.py",
    "orchestration/workflows/nodes/analyst.py",
    "orchestration/distributed/crewai/geometric_space.py"
  ],
  "lnn_files": [
    "enhanced_integration.py",
    "production_integration_2025.py",
    "production_system_2025.py",
    "ultra_deep_2025.py",
    "persistence/state_manager.py",
    "components/async_batch_processor.py",
    "components/registry.py",
    "components/production_registry.py",
    "components/real_registry.py",
    "neural/lnn_consensus.py",
    "neural/lnn_workflows.py",
    "neural/liquid_real.py",
    "neural/liquid_2025.py",
    "neural/context_integration.py",
    "neural/__init__.py",
    "neural/lnn.py",
    "streaming/kafka_integration.py",
    "integration/lnn_council_system.py",
    "integration/real_system_2025.py",
    "lnn/real_mit_lnn.py",
    "lnn/core.py",
    "lnn/dynamics.py",
    "lnn/edge_deployment.py",
    "lnn/training.py",
    "lnn/utils.py",
    "lnn/__init__.py",
    "lnn/architectures.py",
    "core/unified_config.py",
    "observability/prometheus_integration.py",
    "agents/council/context_aware_lnn.py",
    "agents/council/standalone_test.py",
    "agents/council/lnn_council_agent.py",
    "agents/council/production_lnn_council.py",
    "agents/council/config.py",
    "agents/council/test_gradual_integration.py",
    "agents/council/test_pipeline_integration.py",
    "agents/council/test_basic_components.py",
    "agents/council/lnn_council.py",
    "agents/council/test_decision_pipeline.py",
    "agents/council/test_lnn_council_agent.py",
    "agents/council/lnn/agent.py",
    "agents/council/lnn/orchestrator.py",
    "agents/council/lnn/interfaces.py",
    "agents/council/lnn/implementations.py",
    "agents/council/lnn/factory.py",
    "agents/council/lnn/contracts.py",
    "agents/council/lnn/registry.py",
    "agents/council/lnn/__init__.py",
    "agents/council/lnn/context/__init__.py",
    "agents/council/lnn/neural/engine.py",
    "agents/council/lnn/neural/config.py",
    "agents/council/lnn/neural/layers.py",
    "agents/council/lnn/neural/__init__.py",
    "orchestration/workflows/nodes/advanced_supervisor_2025.py",
    "orchestration/workflows/nodes/supervisor.py",
    "orchestration/workflows/nodes/lnn_supervisor_integration.py"
  ],
  "api_files": [
    "api/routes_coral.py",
    "api/graphql_federation.py",
    "api/routes_dpo.py",
    "api/neural_mesh_dashboard.py",
    "api/search.py",
    "api/neural_brain_api.py",
    "api/routes_tda.py",
    "api/governance_dashboard.py",
    "api/__init__.py",
    "api/streaming.py",
    "api/streaming_pro.py",
    "api/routes_memory.py",
    "enterprise/search_api.py",
    "integrations/real_api_connectors.py",
    "config/api.py",
    "observability/telemetry.py",
    "enterprise/mem0_search/deps.py",
    "enterprise/mem0_search/endpoints.py"
  ],
  "entry_points": [
    "unified_brain.py",
    "ultra_deep_2025.py",
    "orchestration/bus_metrics.py",
    "orchestration/langgraph_adapter.py",
    "orchestration/dlq_handler.py",
    "orchestration/pro_orchestration_system.py",
    "orchestration/event_driven_triggers.py",
    "consensus/examples.py",
    "benchmarks/workflow_benchmarks.py",
    "api/neural_mesh_dashboard.py",
    "api/search.py",
    "api/neural_brain_api.py",
    "api/governance_dashboard.py",
    "memory/simple_smoke_test.py",
    "memory/test_compression.py",
    "memory/fastrp_embeddings.py",
    "memory/shape_memory_v2.py",
    "memory/memory_bus_adapter.py",
    "memory/test_metrics_updater.py",
    "memory/neo4j_etl.py",
    "memory/smoke_test.py",
    "memory/shape_aware_memory.py",
    "enterprise/search_api.py",
    "streaming/pro_streaming_system.py",
    "integration/real_system_2025.py",
    "tda/topo_fuzzer_pro.py",
    "agents/real_agent_system.py",
    "examples/gpu_allocation_scenario.py",
    "innovations/spiking_gnn_2025.py",
    "innovations/hybrid_memory_2025.py",
    "observability/pro_observability_system.py",
    "consciousness/executive_functions.py",
    "testing/advanced_chaos.py",
    "testing/cicd_automation.py",
    "testing/chaos_engineering.py",
    "testing/streaming_tda_tests.py",
    "testing/benchmark_framework.py",
    "core/consensus/examples.py",
    "agents/council/test_observability_standalone.py",
    "agents/council/test_models_standalone.py",
    "agents/council/test_real_integration_simple.py",
    "agents/council/test_kg_simple.py",
    "agents/council/standalone_test.py",
    "agents/council/test_context_simple.py",
    "agents/council/test_components_direct.py",
    "agents/council/test_modular_simple.py",
    "agents/council/test_memory_integration.py",
    "agents/council/test_context_aware.py",
    "agents/council/test_end_to_end_integration.py",
    "agents/council/test_simple_components.py",
    "agents/council/test_real_system_integration.py",
    "agents/council/test_integration_standalone.py",
    "agents/council/test_gradual_integration.py",
    "agents/council/test_knowledge_integration.py",
    "agents/council/test_confidence_standalone.py",
    "agents/council/test_modular.py",
    "agents/council/test_confidence_scoring_simple.py",
    "agents/council/test_observability_comprehensive.py",
    "agents/council/test_pipeline_integration.py",
    "agents/council/test_memory_simple.py",
    "agents/council/integration_test.py",
    "agents/council/test_context_final.py",
    "agents/council/test_fallback_comprehensive.py",
    "agents/council/test_real_integration.py",
    "agents/council/test_final_working.py",
    "agents/council/test_kg_final.py",
    "agents/council/test_basic_components.py",
    "agents/council/test_confidence_scoring.py",
    "agents/council/test_models_simple.py",
    "agents/council/test_decision_pipeline.py",
    "agents/council/test_knowledge_graph.py",
    "agents/council/test_fallback_standalone.py",
    "agents/council/test_lnn_council_agent.py",
    "agents/temporal/client.py",
    "agents/temporal/worker.py",
    "agents/evolver/agent.py",
    "agents/observer/tests/test_agent.py",
    "tda/streaming/parallel_processor.py",
    "tda/streaming/event_adapters.py",
    "memory/benchmarks/run_production_benchmark.py",
    "orchestration/distributed/test_distributed_coordination.py",
    "orchestration/distributed/test_hierarchical_orchestrator.py",
    "orchestration/durable/test_workflow_observability.py",
    "orchestration/durable/test_saga_compensation.py",
    "orchestration/durable/saga_compensation_example.py",
    "orchestration/events/test_semantic_orchestrator.py",
    "orchestration/observability/test_hybrid_observability.py"
  ],
  "real_implementations": [
    "cloud_integration.py",
    "unified_brain.py",
    "production_wiring.py",
    "enhanced_integration.py",
    "feature_flags.py",
    "bio_enhanced_production_system.py",
    "production_integration_2025.py",
    "bio_enhanced_system.py",
    "production_system_2025.py",
    "ultra_deep_2025.py",
    "enhanced_system_2025.py",
    "tda_engine.py",
    "distributed/ray_serve_deployment.py",
    "distributed/real_ray_system.py",
    "distributed/actor_system.py",
    "governance/constitutional_ai_3.py",
    "governance/constitutional_ai.py",
    "governance/executor.py",
    "governance/autonomous_governance.py",
    "governance/real_policy_engine.py",
    "governance/risk_engine.py",
    "orchestration/adaptive_checkpoint.py",
    "orchestration/tda_coordinator.py",
    "orchestration/working_orchestrator.py",
    "orchestration/feature_flags.py",
    "orchestration/bus_metrics.py",
    "orchestration/temporal_signalfirst.py",
    "orchestration/bus_protocol.py",
    "orchestration/langgraph_workflows.py",
    "orchestration/real_agent_workflows.py",
    "orchestration/langgraph_adapter.py",
    "orchestration/workflows.py",
    "orchestration/dlq_handler.py",
    "orchestration/pro_orchestration_system.py",
    "orchestration/event_driven_triggers.py",
    "orchestration/bus_redis.py",
    "orchestration/langgraph_collective.py",
    "research_2025/mixture_of_agents.py",
    "research_2025/graph_of_thoughts.py",
    "research_2025/constitutional_ai_v2.py",
    "monitoring/production_monitor.py",
    "monitoring/business_metrics.py",
    "monitoring/real_time_dashboard.py",
    "chaos/experiments.py",
    "inference/pearl_engine.py",
    "persistence/state_manager.py",
    "components/working_registry.py",
    "components/real_components.py",
    "components/async_batch_processor.py",
    "components/production_registry.py"
  ],
  "mock_implementations": [
    "vector_search.py",
    "governance/database.py",
    "orchestration/checkpoints.py",
    "graph/neo4j_integration.py",
    "api/neural_mesh_dashboard.py",
    "memory/redis_store.py",
    "memory/knn_index.py",
    "memory/async_shape_memory.py",
    "memory/shape_memory_v2_prod.py",
    "memory/shape_memory_v2.py",
    "memory/causal_pattern_store.py",
    "memory/knn_index_real.py",
    "enterprise/vector_database.py",
    "enterprise/knowledge_graph.py",
    "neural/context_integration.py",
    "neural/memory_hooks.py",
    "integrations/enhanced_workflow_orchestrator.py",
    "integrations/__init__.py",
    "integration/tda_neo4j_bridge.py",
    "integration/mem0_neo4j_bridge.py",
    "tda/unified_engine_2025.py",
    "adapters/redis_high_performance.py",
    "adapters/tda_neo4j_adapter.py",
    "collective/graph_builder.py",
    "collective/supervisor.py",
    "communication/neural_mesh.py",
    "core/consciousness.py",
    "core/config.py",
    "core/error_topology.py",
    "core/exceptions.py",
    "observability/layer.py",
    "observability/anomaly_detection.py",
    "observability/knowledge_graph.py",
    "advanced_processing/real_pearl_inference.py",
    "testing/chaos_engineering.py",
    "testing/benchmark_framework.py",
    "communication/collective/context_engine.py",
    "communication/collective/memory_manager.py",
    "communication/collective/graph_builder.py",
    "communication/collective/supervisor.py",
    "agents/council/test_kg_simple.py",
    "agents/council/models.py",
    "agents/council/test_knowledge_integration.py",
    "agents/council/test_kg_final.py",
    "agents/executor/agent.py",
    "agents/schemas/base.py",
    "agents/communication/transport.py",
    "agents/evolver/agent.py",
    "agents/analyst/agent.py",
    "agents/council/lnn/implementations.py"
  ],
  "errors": [
    "cloud_integration.py: expected an indented block after function definition on line 20 (<unknown>, line 21)",
    "unified_brain.py: expected an indented block after function definition on line 105 (<unknown>, line 106)",
    "production_wiring.py: expected an indented block after function definition on line 31 (<unknown>, line 32)",
    "enhanced_integration.py: expected an indented block after function definition on line 48 (<unknown>, line 49)",
    "feature_flags.py: expected an indented block after function definition on line 138 (<unknown>, line 139)",
    "bio_enhanced_production_system.py: expected an indented block after function definition on line 53 (<unknown>, line 54)",
    "production_integration_2025.py: expected an indented block after function definition on line 68 (<unknown>, line 69)",
    "bio_enhanced_system.py: expected an indented block after function definition on line 22 (<unknown>, line 23)",
    "production_system_2025.py: unindent does not match any outer indentation level (<unknown>, line 50)",
    "vector_search.py: expected an indented block after function definition on line 136 (<unknown>, line 143)",
    "ultra_deep_2025.py: expected an indented block after function definition on line 212 (<unknown>, line 213)",
    "enhanced_system_2025.py: expected an indented block after function definition on line 95 (<unknown>, line 96)",
    "distributed/ray_serve_deployment.py: expected an indented block after function definition on line 44 (<unknown>, line 45)",
    "distributed/real_ray_system.py: expected an indented block after function definition on line 135 (<unknown>, line 136)",
    "distributed/actor_system.py: expected an indented block after function definition on line 246 (<unknown>, line 247)",
    "governance/constitutional_ai_3.py: expected an indented block after function definition on line 172 (<unknown>, line 174)",
    "governance/constitutional_ai.py: expected an indented block after function definition on line 68 (<unknown>, line 71)",
    "governance/database.py: unindent does not match any outer indentation level (<unknown>, line 36)",
    "governance/executor.py: expected an indented block after function definition on line 33 (<unknown>, line 34)",
    "governance/autonomous_governance.py: expected an indented block after function definition on line 52 (<unknown>, line 53)",
    "governance/real_policy_engine.py: expected an indented block after function definition on line 16 (<unknown>, line 17)",
    "governance/risk_engine.py: expected an indented block after function definition on line 34 (<unknown>, line 36)",
    "orchestration/adaptive_checkpoint.py: expected an indented block after function definition on line 204 (<unknown>, line 205)",
    "orchestration/tda_coordinator.py: expected an indented block after function definition on line 149 (<unknown>, line 152)",
    "orchestration/working_orchestrator.py: expected an indented block after function definition on line 59 (<unknown>, line 60)",
    "orchestration/feature_flags.py: unexpected indent (<unknown>, line 314)",
    "orchestration/bus_metrics.py: unindent does not match any outer indentation level (<unknown>, line 69)",
    "orchestration/temporal_signalfirst.py: expected an indented block after function definition on line 100 (<unknown>, line 101)",
    "orchestration/langgraph_workflows.py: expected an indented block after function definition on line 146 (<unknown>, line 147)",
    "orchestration/real_agent_workflows.py: expected an indented block after function definition on line 146 (<unknown>, line 147)",
    "orchestration/langgraph_adapter.py: expected an indented block after function definition on line 138 (<unknown>, line 143)",
    "orchestration/workflows.py: expected an indented block after 'if' statement on line 86 (<unknown>, line 87)",
    "orchestration/dlq_handler.py: expected an indented block after 'try' statement on line 250 (<unknown>, line 251)",
    "orchestration/pro_orchestration_system.py: expected an indented block after function definition on line 269 (<unknown>, line 270)",
    "orchestration/event_driven_triggers.py: expected an indented block after function definition on line 109 (<unknown>, line 110)",
    "orchestration/checkpoints.py: expected 'except' or 'finally' block (<unknown>, line 50)",
    "orchestration/langgraph_collective.py: expected an indented block after function definition on line 180 (<unknown>, line 181)",
    "research_2025/mixture_of_agents.py: expected an indented block after function definition on line 25 (<unknown>, line 26)",
    "research_2025/graph_of_thoughts.py: expected an indented block after function definition on line 28 (<unknown>, line 29)",
    "research_2025/constitutional_ai_v2.py: expected an indented block after function definition on line 75 (<unknown>, line 76)",
    "monitoring/production_monitor.py: expected 'except' or 'finally' block (<unknown>, line 103)",
    "monitoring/business_metrics.py: expected an indented block after function definition on line 79 (<unknown>, line 80)",
    "monitoring/real_time_dashboard.py: expected an indented block after function definition on line 49 (<unknown>, line 50)",
    "chaos/experiments.py: expected an indented block after function definition on line 40 (<unknown>, line 41)",
    "inference/pearl_engine.py: expected an indented block after function definition on line 37 (<unknown>, line 38)",
    "persistence/state_manager.py: expected an indented block after function definition on line 43 (<unknown>, line 44)",
    "components/working_registry.py: expected an indented block after function definition on line 192 (<unknown>, line 193)",
    "components/real_components.py: expected an indented block after function definition on line 45 (<unknown>, line 46)",
    "components/async_batch_processor.py: expected an indented block after function definition on line 124 (<unknown>, line 125)",
    "components/registry.py: unexpected indent (<unknown>, line 182)"
  ],
  "total_classes": 439,
  "total_functions": 860,
  "total_async_functions": 292
}